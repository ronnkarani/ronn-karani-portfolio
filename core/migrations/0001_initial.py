# Generated by Django 5.2.4 on 2025-08-12 17:54

import ckeditor_uploader.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("excerpt", models.TextField()),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                ("image", models.ImageField(upload_to="blogs/")),
                ("author", models.CharField(default="Ronny", max_length=100)),
                ("created_at", models.DateField(auto_now_add=True)),
                ("views", models.PositiveIntegerField(default=0)),
                ("likes", models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", ckeditor_uploader.fields.RichTextUploadingField()),
                ("image", models.ImageField(upload_to="projects/")),
                ("technologies", models.TextField(help_text="Comma-separated list")),
                ("repo_url", models.URLField(blank=True, null=True)),
                ("live_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("views", models.PositiveIntegerField(default=0)),
                ("likes", models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("icon", models.CharField(help_text="Emoji or Icon", max_length=10)),
                (
                    "category",
                    models.CharField(
                        help_text="Category e.g. Frontend", max_length=100
                    ),
                ),
                ("stack", models.TextField(help_text="Tech stack or description")),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "blog",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="core.blogpost",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="core.project",
                    ),
                ),
            ],
        ),
    ]
